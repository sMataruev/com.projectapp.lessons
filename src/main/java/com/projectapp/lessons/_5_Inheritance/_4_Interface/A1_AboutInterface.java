package com.projectapp.lessons._5_Inheritance._4_Interface;


/**
 *
 * С помощью ключевого слова interface можно полностью абстрагировать интерфейс
 * класса от его реализации.
 *
 * Это означает, что с помощью ключевого слова
 * interface можно указать, что именно должен выполнять класс, но не как это делать.
 *
 * Синтаксически интерфейсы аналогичны классам, но не содержат переменные
 * экземпляра, а объявления их методов, как правило, не содержат тело метода.
 *
 * Один interface может реализовать сколько угодно классов и один класс может реализовать
 * сколько угодно интерфейсов.
 *
 * Чтобы реализовать интерфейс, в классе должен быть создан полный набор методов,
 * определенных в этом интерфейсе.
 *
 * Но в каждом классе могут быть определены
 * особенности собственной реализации данного интерфейса.
 *
 * Интерфейсы предназначены для подцержки динамического разрешения вызовов
 * методов во время выполнения.
 *
 * Обьявляемые методы в интерфейсе не могут содержать тел, должна быть указана только сигнатура метода
 * Каждый класс, который включает в себя интерфейс, должен реализовать все его методы.
 *
 * В объявлениях интерфейсов  могут быть объявлены переменные. Они неявно объявляются как
 * final и static,  т.е. их нельзя изменить в классе, реализующем интерфейс. Плюс, они должны быть
 * инициализированными.
 *
 * Все методы и переменные неявно объявляются в интерфейсе как Public.
 *
 * Если в классе реализуется больше одного интерфейса, имена интерфейсов разделяются запятыми.
 *
 * Методы, реализующие элементы интерфейса, должны быть объявлены как public.
 *
 * Кроме того, сигнатура типа реализующего метода должна в точности совпадать с сигнатурой типа,
 * указанной в определении interface
 *
 *
 *
 */


public interface A1_AboutInterface {}



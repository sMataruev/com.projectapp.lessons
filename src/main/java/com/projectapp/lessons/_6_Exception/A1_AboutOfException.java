package com.projectapp.lessons._6_Exception;

/**
 * Исключение - это ненормальная ситуация , возникающая во время выполнения последовательности
 * кода. Иными словами , исключение - это ошибка, возникающая во время выполнения.
 * <p>
 * Исключение в J ava представляет собой объект, описывающий исключительную
 * (т.е. ошибочную) ситуацию, возникающую в определенной части программного
 * кода.
 * Когда возникает такая ситуация, в вызвавшем ошибку методе генерируется
 * объект, который представляет исключение.
 * <p>
 * В определенный момент исключение перехватывается и обрабатывается
 * <p>
 * Исключения могут генерироваться автоматически исполняющей системой Jаvа или вручную в прикладном
 * коде.
 * <p>
 * 1 - Исключения, генерируемые исполняющей системой jаvа, имеют отношение
 * к фундаментальным ошибкам, нарушающим правила языкаj аvа или ограничения,
 * <p>
 * накладываемые исполняющей системой Java.
 * 2 - исключения, генерируемые вручную, * обычно служат для уведомления вызывающего кода
 * о некоторых ошибках в вызываемом методе.
 * <p>
 * Управление обработкой исключений в Java осуществляется с помощью пяти
 * ключевых слов: try, catch, throw, throws и finally.
 * <p>
 * Операторы программы, которые
 * требуется отслеживать на предмет исключений, размещаются в блоке try.
 * <p>
 * <p>
 * Если исключение возни кает в блоке try, оно генерируется. Прикладной код может
 * перехватить исключение, используя блок catch, а затем обработать его некоторым
 * рациональным способом
 * <p>
 * Системные исключения автоматически генерируются
 * исполняющей системой J ava. Для генерирования исключения вручную
 * служит ключевое слово throw.
 * <p>
 * Любое исключение, генерируемое в теле метода, должно быть обозначено в его объявлении
 * ключевым словом throws.
 * А любой код, который должен быть непременно выполнен по завершении блока try, размещается
 * в блоке finally.
 */
public interface A1_AboutOfException {



//    try {
//        // блок кода, в котором отслеживаются ошибки
//    }
//    catch (тип исключений_1 Ob){
//        // обработчик исключений_1 Ob
//    }
//    catch (тип исключений_2 Ob2){
//        // обработчик исключений_2 Ob2
//    }
//    finally{
//        // блок кода, который должен быт в непременно
//        // выполнен по завершении блока try
//    }







}
